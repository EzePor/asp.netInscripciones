// <auto-generated />
using System;
using Inscripciones.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inscripciones.Migrations
{
    [DbContext(typeof(InscripcionesContext))]
    [Migration("20240609215818_corregierroresdesintaxis")]
    partial class corregierroresdesintaxis
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Inscripciones.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoNombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Alumnos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoNombre = "Rubén Alejandro Ramirez",
                            Direccion = "Bv Roque Saenz Peña 2942",
                            Email = "aleramirezsj@gmail.com",
                            Telefono = "15447106"
                        });
                });

            modelBuilder.Entity("Inscripciones.Models.AnioCarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("AnioCarreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 1,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 1,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 3,
                            CarreraId = 1,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 4,
                            CarreraId = 2,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 5,
                            CarreraId = 2,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 6,
                            CarreraId = 2,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 7,
                            CarreraId = 3,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 8,
                            CarreraId = 3,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 9,
                            CarreraId = 3,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 10,
                            CarreraId = 4,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 11,
                            CarreraId = 4,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 12,
                            CarreraId = 4,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 13,
                            CarreraId = 5,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 14,
                            CarreraId = 5,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 15,
                            CarreraId = 5,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 16,
                            CarreraId = 5,
                            Nombre = "Cuarto"
                        },
                        new
                        {
                            Id = 17,
                            CarreraId = 6,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 18,
                            CarreraId = 6,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 19,
                            CarreraId = 6,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 20,
                            CarreraId = 6,
                            Nombre = "Cuarto"
                        },
                        new
                        {
                            Id = 21,
                            CarreraId = 7,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 22,
                            CarreraId = 7,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 23,
                            CarreraId = 7,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 24,
                            CarreraId = 7,
                            Nombre = "Cuarto"
                        },
                        new
                        {
                            Id = 25,
                            CarreraId = 8,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 26,
                            CarreraId = 8,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 27,
                            CarreraId = 8,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 28,
                            CarreraId = 8,
                            Nombre = "Cuarto"
                        });
                });

            modelBuilder.Entity("Inscripciones.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Tecnicatura Superior en Desarrollo de Software"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Tecnicatura Superior en Soporte de Infraestructura"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Tecnicatura Superior en Gestion de las Organizaciones"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Tecnicatura Superior en Enfermeria"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Profesorado de Educación Secundaria en Ciencias de la Administración"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Profesorado de Educación Inicial"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Profesorado de Educación Secundaria en Economía"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Profesorado de Educación Tecnológica"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Licenciatura en Cooperativismo y Mutualismo"
                        });
                });

            modelBuilder.Entity("Inscripciones.Models.DetalleInscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InscripcionId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("Modalidadcursado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionId");

                    b.HasIndex("MateriaId");

                    b.ToTable("DetalleInscripciones");
                });

            modelBuilder.Entity("Inscripciones.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CarreraId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Inscripciones.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioCarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AnioCarreraId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioCarreraId = 25,
                            Nombre = "Pedagogía"
                        },
                        new
                        {
                            Id = 2,
                            AnioCarreraId = 25,
                            Nombre = "Movimiento y Cuerpo"
                        },
                        new
                        {
                            Id = 3,
                            AnioCarreraId = 25,
                            Nombre = "Práctica Docente I: Escenarios Educativos"
                        },
                        new
                        {
                            Id = 4,
                            AnioCarreraId = 25,
                            Nombre = "Introducción a la Tecnología"
                        },
                        new
                        {
                            Id = 5,
                            AnioCarreraId = 25,
                            Nombre = "Historia de la Tecnología"
                        },
                        new
                        {
                            Id = 6,
                            AnioCarreraId = 25,
                            Nombre = "Diseño y Producción de la Técnología 1"
                        },
                        new
                        {
                            Id = 7,
                            AnioCarreraId = 25,
                            Nombre = "Matemática"
                        },
                        new
                        {
                            Id = 8,
                            AnioCarreraId = 25,
                            Nombre = "Física"
                        },
                        new
                        {
                            Id = 9,
                            AnioCarreraId = 26,
                            Nombre = "Psicología de la Educación"
                        },
                        new
                        {
                            Id = 10,
                            AnioCarreraId = 26,
                            Nombre = "Didáctica y Curriculum"
                        },
                        new
                        {
                            Id = 11,
                            AnioCarreraId = 26,
                            Nombre = "Instituciones Educativas"
                        },
                        new
                        {
                            Id = 12,
                            AnioCarreraId = 26,
                            Nombre = "Práctica Docente II: La Institución Escolar"
                        },
                        new
                        {
                            Id = 13,
                            AnioCarreraId = 26,
                            Nombre = "Sujetos de la Educación I"
                        },
                        new
                        {
                            Id = 14,
                            AnioCarreraId = 26,
                            Nombre = "Tic para la Enseñanza"
                        },
                        new
                        {
                            Id = 15,
                            AnioCarreraId = 26,
                            Nombre = "Procesos Productivos"
                        },
                        new
                        {
                            Id = 16,
                            AnioCarreraId = 26,
                            Nombre = "Tecnológica II"
                        },
                        new
                        {
                            Id = 17,
                            AnioCarreraId = 26,
                            Nombre = "Didáctica Específica I"
                        });
                });

            modelBuilder.Entity("Inscripciones.Models.AnioCarrera", b =>
                {
                    b.HasOne("Inscripciones.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Inscripciones.Models.DetalleInscripcion", b =>
                {
                    b.HasOne("Inscripciones.Models.Inscripcion", "Inscripcion")
                        .WithMany()
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inscripciones.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Inscripciones.Models.Inscripcion", b =>
                {
                    b.HasOne("Inscripciones.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inscripciones.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Inscripciones.Models.Materia", b =>
                {
                    b.HasOne("Inscripciones.Models.AnioCarrera", "AnioCarrera")
                        .WithMany()
                        .HasForeignKey("AnioCarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnioCarrera");
                });
#pragma warning restore 612, 618
        }
    }
}
